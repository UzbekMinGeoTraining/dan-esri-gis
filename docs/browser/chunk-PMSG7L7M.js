import{b as q,i as G,l as O,o as k,q as B}from"./chunk-4DR6EKLV.js";import{d as z}from"./chunk-3KFX3FFC.js";import{a as F}from"./chunk-2WNCPIJC.js";import{b as D}from"./chunk-7X2HMUNN.js";import{a as j}from"./chunk-GLWPOGYF.js";import{a as C}from"./chunk-PYQRTZNZ.js";import{a as P}from"./chunk-NDYVXEZ5.js";import{l as S}from"./chunk-GMC3I5VG.js";import{g as f}from"./chunk-JEGVIFEP.js";function _(n,c,p,w,a){return f(this,null,function*(){let{elevationProvider:l,renderCoordsHelper:i}=n,{elevationInfo:d}=c,{pointsInFeatures:x,spatialReference:m}=w,u=P.fromJSON(m),g=k(d,!0),h=yield O(g,u,a);S(a);let s=[],e=new Set,r=new Set,t=new B,o=F(0,0,0,P.WGS84),y=new G,I=C();o.spatialReference=u;let v=n.elevationProvider.spatialReference??n.spatialReference;for(let{objectId:E,points:A}of x){let b=p(E);if(b==null){for(let R of A)s.push(R.z??0);e.add(E);continue}b.isDraped&&r.add(E);let J=b.graphic.geometry;t.setFromElevationInfo(z(J,d)),t.updateFeatureExpressionInfoContext(h,b.graphic,c);for(let{x:R,y:N,z:T}of A)o.x=R,o.y=N,o.z=T??0,yield D(o,I,v,0,{signal:a}),q(I,l,t,i,y),s.push(y.z)}return{elevations:s,drapedObjectIds:r,failedObjectIds:e}})}function ne(n,c,p){return f(this,null,function*(){if(n==null||c.candidates.length===0)return H;let w=n.graphics3DGraphicsByObjectID??n.graphics3DGraphics,a=[],l=[],{renderer:i}=n,d=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?j():null,x=(o,y)=>f(this,[o,y],function*(e,{graphic:r,graphics3DSymbol:t}){let I=yield d,v=yield n.getRenderingInfoAsync(r,i,I,{signal:p});return v==null?[]:t.queryForSnapping(e,u,v,p)}),{candidates:m,spatialReference:u}=c;for(let e=0;e<m.length;++e){let r=m[e],{objectId:t}=r,o=typeof t=="number"?w?.get(t):void 0;if(o==null)continue;let{graphics3DSymbol:y}=o;y.symbologySnappingSupported&&(a.push(x(r,o)),l.push(e))}if(a.length===0)return H;let g=yield Promise.all(a);S(p);let h=[],s=[];for(let e=0;e<g.length;++e){let r=g[e],t=l[e];for(let o of r)h.push(o),s.push(t)}return{candidates:h,sourceCandidateIndices:s}})}var H={candidates:[],sourceCandidateIndices:[]};export{_ as a,ne as b};
