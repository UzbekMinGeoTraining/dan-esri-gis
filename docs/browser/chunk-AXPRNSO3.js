import{h as G,i as E}from"./chunk-U4Y7WABQ.js";import{a as T,b as F}from"./chunk-JEGVIFEP.js";var z={color:[128,128,128,1],outlinecolor:[0,0,0,1],backgroundcolor:[128,128,128,1],borderlinecolor:[0,0,0,1],tintcolor:[255,255,255,1]},w={CIMVectorMarker:{scalesymbolsproportionally:!1,respectframe:!0,anchorpointunits:"Relative",offsetx:0,offsety:0,rotateclockwise:!1,rotation:0,size:10,enable:!0,colorlocked:!1},CIMPictureMarker:{scalex:1,texturefilter:"Draft",anchorpointunits:"Relative",offsetx:0,offsety:0,rotateclockwise:!1,rotation:0,size:10,enable:!0,colorlocked:!1},CIMTextSymbol:{angle:0,anglex:0,angley:0,halosize:1,height:10,horizontalalignment:"Left",kerning:!0,letterspacing:0,letterwidth:100,ligatures:!0,linegap:0,offsetx:0,offsety:0,strikethrough:!1,textcase:"Normal",textstring:"",underline:!1,verticalalignment:"Bottom",enable:!0,colorlocked:!1},CIMSolidStroke:{capstyle:"Round",joinstyle:"Round",miterlimit:4,width:4,enable:!0,colorlocked:!1},CIMPictureStroke:{texturefilter:"Draft",capstyle:"Round",joinstyle:"Round",miterlimit:4,width:4,enable:!0,colorlocked:!1},CIMGradientStroke:{capstyle:"Round",joinstyle:"Round",miterlimit:4,width:4,enable:!0,colorlocked:!1},CIMSolidFill:{enable:!0,colorlocked:!1},CIMPictureFill:{offsetx:0,offsety:0,rotation:0,scalex:1,height:10,texturefilter:"Draft",enable:!0,colorlocked:!1},CIMHatchFill:{offsetx:0,offsety:0,rotation:0,separation:4,enable:!0,colorlocked:!1},CIMGeometricEffectAddControlPoints:{angletolerance:120},CIMGeometricEffectArrow:{arrowtype:"OpenEnded",width:5},CIMGeometricEffectBuffer:{size:1},CIMGeometricEffectCut:{begincut:1,endcut:1,middlecut:0,invert:!1},CIMGeometricEffectDashes:{customendingoffset:0,linedashending:"NoConstraint",offsetalongline:0},CIMGeometricEffectDonut:{method:"Mitered",option:"Accurate",width:2},CIMGeometricEffectJog:{angle:225,length:20,position:50},CIMGeometricEffectControlMeasureLine:{rule:"FullGeometry"},CIMGeometricEffectMove:{offsetx:1,offsety:-1},CIMGeometricEffectOffset:{method:"Square",offset:1,option:"Fast"},CIMGeometricEffectRotate:{angle:15},CIMGeometricEffectScale:{xscalefactor:1.15,yscalefactor:1.15},CIMGeometricEffectWave:{amplitude:2,period:3,seed:1,waveform:"Sinus"},CIMMarkerPlacementAlongLine:{customendingoffset:0,endings:"WithHalfGap",offsetalongline:0,placeperpart:!0,angletoline:!0,offset:0},CIMMarkerPlacementAtExtremities:{extremityplacement:"Both",offsetalongline:0,angletoline:!0,offset:0},CIMMarkerPlacementAtRatioPositions:{beginposition:0,endposition:0,flipfirst:!0,angletoline:!0,offset:0},CIMMarkerPlacementInsidePolygon:{gridangle:0,gridtype:"Fixed",offsetx:0,offsety:0,randomness:100,seed:0,shiftoddrows:!1,stepx:16,stepy:16,clipping:"ClipAtBoundary"},CIMMarkerPlacementOnLine:{relativeto:"LineMiddle",startpointoffset:0,angletoline:!0,offset:0},CIMMarkerPlacementOnVertices:{placeperpart:!0,placeoncontrolpoints:!0,placeonendpoints:!0,placeonregularvertices:!0,angletoline:!0,offset:0},CIMMarkerPlacementPolygonCenter:{method:"OnPolygon",offsetx:0,offsety:0,clipatboundary:!1},CIMAnimatedSymbolProperties:{playanimation:!1,reverseanimation:!1,randomizestarttime:!1,randomizestartseed:0,starttimeoffset:0,duration:3,endingduration:3,useendingduration:!1,repeattype:G.Loop,repeatdelay:0,easing:E.Linear},CIMSymbolAnimationSize:{tosize:10},CIMSymbolAnimationScale:{scalefactor:1},CIMSymbolAnimationColor:{tocolor:[255,255,255,1]},CIMSymbolAnimationTransparency:{totransparency:0},CIMSymbolAnimationRotation:{torotation:0},CIMSymbolAnimationOffset:{offsetx:0,offsety:0}};function W(e){return typeof e=="function"}function oe(e,t,r,n){return W(e)?e(t,r,n):e}function ne(e){return[e.r,e.g,e.b,e.a]}var J=` /-,
`;function v(e){let t=e.length;for(;t--;)if(!J.includes(e.charAt(t)))return!1;return!0}function ae(e,t){let r=[],n=0,a=-1;do if(a=e.indexOf("[",n),a>=n){if(a>n){let o=e.slice(n,a);r.push([o,null,v(o)])}if(n=a+1,a=e.indexOf("]",n),a>=n){if(a>n){let o=t[e.slice(n,a)];o&&r.push([null,o,!1])}n=a+1}}while(a!==-1);if(n<e.length){let o=e.slice(n);r.push([o,null,v(o)])}return r}function ie(e,t,r,n){let a="",o=null;for(let m of t){let[i,f,u]=m;if(i)u?o=i:(o&&(a+=o,o=null),a+=i);else{let y=f;r!=null&&(y=_(f,r));let l=e.attributes[y];l&&(o&&(a+=o,o=null),a+=l)}}return U(a,n)}function U(e,t){switch(typeof e!="string"&&(e=String(e)),t){case"LowerCase":return e.toLowerCase();case"Allcaps":return e.toUpperCase();default:return e}}function le(e,t,r,n,a,o,m=!0){let i=t/a,f=r/o,u=Math.ceil(i/2),y=Math.ceil(f/2);for(let l=0;l<o;l++)for(let s=0;s<a;s++){let p=4*(s+(m?o-l-1:l)*a),c=0,d=0,g=0,h=0,k=0,S=0,b=0,x=(l+.5)*f;for(let I=Math.floor(l*f);I<(l+1)*f;I++){let L=Math.abs(x-(I+.5))/y,q=(s+.5)*i,H=L*L;for(let P=Math.floor(s*i);P<(s+1)*i;P++){let M=Math.abs(q-(P+.5))/u,C=Math.sqrt(H+M*M);C>=-1&&C<=1&&(c=2*C*C*C-3*C*C+1,c>0&&(M=4*(P+I*t),b+=c*e[M+3],g+=c,e[M+3]<255&&(c=c*e[M+3]/250),h+=c*e[M],k+=c*e[M+1],S+=c*e[M+2],d+=c))}}n[p]=h/d,n[p+1]=k/d,n[p+2]=S/d,n[p+3]=b/g}}function X(e){return e?[e[0],e[1],e[2],e[3]/255]:[0,0,0,0]}function se(e){return e.data?.symbol??null}function ce(e){return e.type==="CIMVectorMarker"||e.type==="CIMPictureMarker"||e.type==="CIMBarChartMarker"||e.type==="CIMCharacterMarker"||e.type==="CIMPieChartMarker"||e.type==="CIMStackedBarChartMarker"}function fe(e){return e.type==="CIMGradientStroke"||e.type==="CIMPictureStroke"||e.type==="CIMSolidStroke"}function ue(e){return e!=null&&(e.type==="CIMGradientFill"||e.type==="CIMHatchFill"||e.type==="CIMPictureFill"||e.type==="CIMSolidFill"||e.type==="CIMWaterFill")}function Y(e){return e!=null&&(e.type==="CIMMarkerPlacementAlongLineRandomSize"||e.type==="CIMMarkerPlacementAlongLineSameSize"||e.type==="CIMMarkerPlacementAlongLineVariableSize"||e.type==="CIMMarkerPlacementAtExtremities"||e.type==="CIMMarkerPlacementAtMeasuredUnits"||e.type==="CIMMarkerPlacementAtRatioPositions"||e.type==="CIMMarkerPlacementOnLine"||e.type==="CIMMarkerPlacementOnVertices")}var me=(e,t=0)=>e==null||isNaN(e)?t:e,Me=(e,t)=>e??t,ye=(e,t)=>e??t,Ce=e=>e.tintColor?X(e.tintColor):[255,255,255,1],pe=e=>{if(!e)return!1;for(let t of e)switch(t.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectOffset":case"CIMGeometricEffectDonut":return!0}return!1};function de(){return import("./chunk-JV4XXL5J.js")}function Ie(e){if(!e)return"normal";switch(e.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function ge(e){if(!e)return"normal";switch(e.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function he(e){let t="normal",r="normal";if(e){let n=e.toLowerCase();n.includes("italic")?t="italic":n.includes("oblique")&&(t="oblique"),n.includes("bold")?r="bold":n.includes("light")&&(r="lighter")}return{style:t,weight:r}}function be(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function V(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(let t of e.symbolLayers){let r=V(t);if(r!=null)return r}break;case"CIMTextSymbol":return V(e.symbol);case"CIMSolidFill":return e.color}return null}function N(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{let t=e.symbolLayers;if(t)for(let r of t){let n=N(r);if(n!=null)return n}break}case"CIMTextSymbol":return N(e.symbol);case"CIMSolidStroke":return e.color}}function R(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(let t of e.symbolLayers){let r=R(t);if(r!==void 0)return r}break;case"CIMTextSymbol":return R(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}function ke(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function Se(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function Pe(e){return(e?Object.keys(e):[]).map(t=>({name:t,alias:t,type:typeof e[t]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"}))}var we=e=>e.includes("data:image/svg+xml");function xe(e){if(!e)return null;switch(e.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function A(e){return e&&e.charAt(0).toLowerCase()+e.slice(1)}function Ae(e,t,r,n,a,o,m=!0){let{infos:i}=o,f=1,u=0,y=0,l=0,s=1;for(let{absoluteAnchorPoint:d,offsetX:g,offsetY:h,rotation:k,size:S,frameHeight:b,rotateClockWise:x,scaleSymbolsProportionally:I}of i)s=d?1:f,y=B(g,h,u,s,y),l=O(g,h,u,s,l),b&&(I||m)&&(f*=S/b),u=j(k,x,u);let p=B(n,a,u,s,y),c=O(n,a,u,s,l);return{size:e*f,rotation:j(t,r,u),offsetX:p,offsetY:c}}function $(e){if(e==null)return!1;if(Array.isArray(e))return e.every(t=>$(t));switch(typeof e){case"string":return!!e;case"number":return!isNaN(e)}}function K(e,t){if(t==="color"||t==="outlinecolor"||t==="backgroundcolor"||t==="borderlinecolor"||t==="tintcolor")return[...z[t]];let r=w[e];if(!r)throw new Error(`InternalError: default value for type ${e}.`);return r[t]}function Q(e){return e.split(" ").map(t=>Number(t))}function Z(e){return typeof e=="string"?Q(e):e}function Le(e){return e?.dashTemplate&&(e.dashTemplate=Z(e.dashTemplate)),e}function D(e){if(e==null)return"Normal";switch(e.type){case"CIMTextSymbol":return e.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=e.symbolLayers;if(!t)return"Normal";for(let r of t)if(r.type==="CIMVectorMarker")return D(r)}break;case"CIMVectorMarker":{let t=e.markerGraphics;if(!t)return"Normal";for(let r of t)if(r.symbol)return D(r.symbol)}}return"Normal"}function Te(e){if(e)switch(e.type){case"CIMTextSymbol":return e.height;case"CIMPointSymbol":{let t=0;if(e.symbolLayers){for(let r of e.symbolLayers)if(r)switch(r.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{let n=r.size??w.CIMVectorMarker.size;n>t&&(t=n);break}}}return t}case"CIMLineSymbol":case"CIMPolygonSymbol":{let t=0;if(e.symbolLayers){for(let r of e.symbolLayers)if(r)switch(r.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{let n=r.width;n!=null&&n>t&&(t=n);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(r.markerPlacement&&Y(r.markerPlacement)){let n=r.size??w.CIMVectorMarker.size;n>t&&(t=n)}break;case"CIMPictureFill":{let n=r.height;n!=null&&n>t&&(t=n)}}}return t}}}function _(e,t){if(t!==null){let r=t.get(e);return r?r.name:e}return e}function Fe(e){return e.map(t=>F(T({},t),{propertyName:A(t.propertyName)}))}function Ge(e){let t={};for(let r in e){let n=e[r];t[A(r)]=n}return t}function O(e,t,r,n,a){let o=r*Math.PI/180;if(o){let m=Math.cos(o);return(Math.sin(o)*e+m*t)*n+a}return t*n+a}function B(e,t,r,n,a){let o=r*Math.PI/180;return o?(Math.cos(o)*e-Math.sin(o)*t)*n+a:e*n+a}function j(e,t,r){return t?r-e:r+e}function Ee(e,t,r){let n=r==="Color"||r==="TintColor"||r==="ToColor",a=r==="Rotation"||r==="Angle"||r==="ToRotation",o=t[A(r)];if(o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:a&&(o*=Math.PI/180)),o==null&&(o=K(t.type,r.toLowerCase()),o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]]:a&&(o*=Math.PI/180))),t.primitiveName!=null){let m=e[t.primitiveName];if(m!=null){let i=m[r];i==null||(typeof i=="string"||typeof i=="number"||Array.isArray(i)?(o=i,o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:a&&(o*=Math.PI/180))):(o={valueExpressionInfo:i,defaultValue:o},o!=null&&(n?o={type:"Process",op:"ArcadeColor",value:o}:a&&(o={type:"Process",op:"Divide",left:o,right:180/Math.PI}))))}}if(o==null)throw new Error(`Failed to derive a value or an expression for "${r}".`);return o}export{w as a,oe as b,ne as c,ae as d,ie as e,le as f,X as g,se as h,ce as i,fe as j,ue as k,Y as l,me as m,Me as n,ye as o,Ce as p,pe as q,de as r,Ie as s,ge as t,he as u,be as v,V as w,N as x,R as y,ke as z,Se as A,Pe as B,we as C,xe as D,A as E,Ae as F,$ as G,K as H,Z as I,Le as J,D as K,Te as L,_ as M,Fe as N,Ge as O,Ee as P};
