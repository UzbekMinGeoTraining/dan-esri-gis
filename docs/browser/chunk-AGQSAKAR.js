import{a as d}from"./chunk-HVNUIUKO.js";import{l as T,p as j,q as A,t as k,y as D}from"./chunk-OL43UY3L.js";import{k as x,n as O}from"./chunk-NZ7WSL6F.js";import{a as p}from"./chunk-RRDM7P6F.js";import{c as P}from"./chunk-VQHENXDQ.js";import{f as g}from"./chunk-5PTS4JDF.js";import{Q as h,S as M}from"./chunk-GGZQ5GCM.js";import{U as z}from"./chunk-TFUPB3ZG.js";import{a as r}from"./chunk-BMVJCP2M.js";var F=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]],n=class extends M{constructor(t){super(t),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=F.map(t=>new x({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(t){this._enabled!==t&&(this._enabled=t,this.update())}update(){if(!this._enabled)return void this.clear();let t=e=>{if(e.label!=null)return e.label;let o=e.lij.toString();return e.loadPriority!=null&&(o+=` (${e.loadPriority})`),e.measures&&(o+=`[${e.measures.effectiveLevelForLod}]`),o},m=this.getTiles(),y=new Array,u=new Set((this._labels.size,this._labels.keys()));m.forEach((e,o)=>{let s=e.lij.toString();u.delete(s);let E=e.measures?.effectiveLevelForLod??e.lij[0],f=e.geometry;if(this.enablePolygons&&!this._polygons.has(s)){let l=new d({geometry:f,symbol:this._symbols[E%this._symbols.length]});this._polygons.set(s,l),y.push(l)}if(this.enableLabels){let l=t(e),w=o/(m.length-1),b=g(0,200,w),_=g(20,6,w)/.75,v=e.loadPriority!=null&&e.loadPriority>=m.length,L=new p([b,v?0:b,v?0:b]),S=this.view.type==="3d"?()=>new D({verticalOffset:new k({screenLength:40/.75}),callout:new A({color:new p("white"),border:new j({color:new p("black")})}),symbolLayers:new P([new T({text:l,halo:{color:"white",size:1/.75},material:{color:L},size:_})])}):()=>new O({text:l,haloColor:"white",haloSize:1/.75,color:L,size:_}),a=this._labels.get(s);if(a){let i=S();a.symbol!=null&&JSON.stringify(i)===JSON.stringify(a.symbol)||(a.symbol=i)}else{let i=new d({geometry:f.extent.center,symbol:S()});this._labels.set(s,i),y.push(i)}}});let c=new Array;u.forEach(e=>{let o=this._polygons.get(e);o!=null&&(c.push(o),this._polygons.delete(e));let s=this._labels.get(e);s!=null&&(c.push(s),this._labels.delete(e))}),this.view.graphics.removeMany(c),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};r([h({constructOnly:!0})],n.prototype,"view",void 0),r([h({readOnly:!0})],n.prototype,"updating",void 0),r([h()],n.prototype,"enabled",null),n=r([z("esri.views.support.TileTreeDebugger")],n);export{n as a};
