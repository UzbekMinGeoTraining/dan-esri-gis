import{a as w}from"./chunk-NPHNUKYC.js";import{d as E,i as x,l as y}from"./chunk-HW47RMVO.js";import{h as g}from"./chunk-7YHK56KB.js";import{e as c}from"./chunk-KAOR3JAH.js";import{a as h}from"./chunk-VY6QN6EN.js";import{Q as l}from"./chunk-GGZQ5GCM.js";import{U as d}from"./chunk-TFUPB3ZG.js";import{a as s}from"./chunk-BMVJCP2M.js";import{r as o}from"./chunk-3IBUFXWY.js";var V=n=>{let r=class extends n{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=e=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&o.getLogger(this).error("Error while evaluating definitionExpression: "+e),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&o.getLogger(this).error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer?.definitionExpression)return null;try{let e=c.create(this.i3slayer.definitionExpression,{fieldsIndex:this.i3slayer.fieldsIndex});if(!e.isStandardized)return o.getLogger(this).error("definitionExpression is using non standard function"),null;let t=[],i=e.fieldNames;return x(i,this.i3slayer.fields,{missingFields:t}),t.length>0?(o.getLogger(this).error(`definitionExpression references unknown fields: ${t.join(", ")}`),null):(this._definitionExpressionErrors=0,e)}catch(e){return o.getLogger(this).error("Failed to parse definitionExpression: "+e),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:[]}_evaluateClause(e,t){try{return e.testFeature(t)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(e){if(!this.parsedDefinitionExpression)return e;let t=this.i3slayer.definitionExpression,i=e.clone();return i.where?i.where=`(${t}) AND (${i.where})`:i.where=t,i}};return s([l({readOnly:!0})],r.prototype,"parsedDefinitionExpression",null),s([l({readOnly:!0})],r.prototype,"definitionExpressionFields",null),r=s([d("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],r),r};var G=n=>{let r=class extends n{get timeExtent(){return w(this.i3slayer,this.view?.timeExtent,this._get("timeExtent"))}get mergedFilter(){let{filter:e,timeExtent:t}=this;if(t==null)return e;let i=e?.clone()??new h;return t!=null&&(i.timeExtent=i.timeExtent?.intersection(t)??t),i}getTimeFilterDependencies(){let{timeInfo:e}=this.i3slayer;if(e==null)return[];let{startField:t,endField:i}=e;return[t,i]}addTimeFilter(e,t){if(t==null)return;let{timeInfo:i}=this.i3slayer;if(i==null)return;let{startField:a,endField:u,useTime:p}=i;if(!p||a==null&&u==null)return;let f=i.toJSON(),D=t.toJSON();e.push((F,_)=>b(F,_,f,D))}};return s([l({readOnly:!0})],r.prototype,"timeExtent",null),s([l()],r.prototype,"mergedFilter",null),r=s([d("esri.views.3d.layers.support.TemporalSceneLayerView")],r),r};function b(n,r,e,t){let i=r.attributeInfo?.attributeData;if(i==null)return;let{startTimeField:a,endTimeField:u}=e;if(a!=null&&i[a]==null||u!=null&&i[u]==null)return;let p=g(e,t,new m(i));if(p==null)return;let{featureIds:f}=r;E(n,f,p)}var m=class{constructor(r){this.attributeData=r}getAttribute(r,e){return y(this.attributeData[e],r)}getAttributeAsTimestamp(r,e){let t=this.getAttribute(r,e);return typeof t=="string"?new Date(t).getTime():typeof t=="number"||t==null?t:null}};var M="updating";function R(n){return n==="updating"?null:n}function X(n){return n==="updating"}export{M as a,R as b,X as c,V as d,G as e};
