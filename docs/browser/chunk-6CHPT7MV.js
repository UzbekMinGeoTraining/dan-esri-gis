import{A as $e,k as U,p as ke,r as Fe,s as Ae,t as De,u as Oe,v as Ee,w as qe,x as Ve,y as He}from"./chunk-SK2WDIND.js";import{e as Ue}from"./chunk-E43YKIMQ.js";import{b as je}from"./chunk-DKD4OKJ2.js";import{a as _e,b as ge,g as Te,h as Re,l as Ge,m as Ce}from"./chunk-AFJD7CUR.js";import{mb as Pe}from"./chunk-AN522XY4.js";import{q as j,r as q,t as be,v as ve,x as V,y as xe}from"./chunk-4HNIM6ZU.js";import{a as de,b as le}from"./chunk-OH475TQV.js";import{b as ze}from"./chunk-UUKQEAQR.js";import{a as Me}from"./chunk-74RJCD5E.js";import{A as fe,B as ye,w as pe,z as me}from"./chunk-PXLEIVAM.js";import{f as Ie,g as we,h as Se}from"./chunk-QBRYULPI.js";import{a as ae}from"./chunk-Q6ZVH4MK.js";import{a as ce}from"./chunk-PFIMJ2UL.js";import{e as ue}from"./chunk-CY477QBZ.js";import{m as ne,s as P,t as he}from"./chunk-PM4ZR7W6.js";import{a as x}from"./chunk-PJX4LNSV.js";import{a as Q}from"./chunk-MBJHSEMD.js";import{a as R}from"./chunk-YFBPRKIN.js";import{a as C,d as ie,e as oe,g as z}from"./chunk-Q5WFUDPQ.js";import{e as ee,f as te,i as re}from"./chunk-T7BKG6V3.js";import{i as K}from"./chunk-R6VC74T7.js";import{a as _,v as se}from"./chunk-6WKJD7BM.js";import{n as J}from"./chunk-4DLSYLKE.js";import{Q as g,S as Y}from"./chunk-GGZQ5GCM.js";import{U as N}from"./chunk-TFUPB3ZG.js";import{a as f}from"./chunk-BMVJCP2M.js";import{l as B,u as X}from"./chunk-GMC3I5VG.js";import{a as Z}from"./chunk-WGF2T2BG.js";import{a as y,u as W}from"./chunk-BP73DJTS.js";import{a as $,b as L,g as u}from"./chunk-JEGVIFEP.js";function Le(r,e,t){return u(this,null,function*(){let s=[],i={scaleInfo:ke(r),scaleExpression:null};for(let o of e)switch(o.type){case"marker":if(o.animationParams){s.push(...Fe(t.instances.animatedMarker,o,U,i));break}s.push(...Ae(t.instances.marker,o,U,i));break;case"fill":o.spriteRasterizationParam==null?s.push(...De(t.instances.fill,o,i)):s.push(...Oe(t.instances.complexFill,o,!1,i));break;case"line":o.spriteRasterizationParam?s.push(...qe(t.instances.texturedLine,o,!1,i)):s.push(...Ee(t.instances.line,o,!1,i));break;case"text":s.push(...Ve(t.instances.text,o,U,i))}return s})}var k=class r extends Te{static from(e,t,s){return new r(e,t,s)}constructor(e,t,s){super(s),this._items=e,this._tile=t,this._index=-1,this._cachedGeometry=null;let i=t.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){return this._current.symbolResource?.symbolInfo.meshWriters??[]}hasField(e){return this._current.attributes[e]!=null}field(e){return this.readAttribute(e)}get geometryType(){let e=z(this._current.geometry);return e==="esriGeometryPoint"?"esriGeometryMultipoint":e}getCursor(){return this.copy()}copy(){let e=new r(this._items,this._tile,this.metadata);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._cachedGeometry=this._cachedGeometry,e._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let e="";for(let t in this._current.attributes)e+=this._current.attributes[t];return e}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let e=ne(this._current.projectedGeometry,this.hasZ,this.hasM);if(this.geometryType==="esriGeometryPolyline"&&(e=he(new x,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=P(new x,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(e){if(!this._wrappingInfo)return;let{worldSizeX:t}=this._wrappingInfo;if(e.isPoint)return t===1?(e.coords.push(512,0),e.coords.push(2*-512,0),void e.lengths.push(3)):t===2?(e.coords.push(2*512,0),e.coords.push(4*-512,0),void e.lengths.push(3)):void this._wrapVertex(e.coords,0,2,t);if(this.geometryType==="esriGeometryMultipoint"){if(t===1){let s=e.coords.slice();s[0]-=512;let i=e.coords.slice();i[0]+=512,e.coords.push(...s,...i);let o=e.lengths[0];return void e.lengths.push(o,o)}this._wrapVertex(e.coords,0,2,t)}}_wrapVertex(e,t,s,i){let o=t*s,a=e[o];a<-512*(i-2)?e[o]=a+512*i:a>512*(i-1)&&(e[o]=a-512*i)}_readX(){let e=this._readGeometry();return e!=null?e.coords[0]:0}_readY(){let e=this._readGeometry();return e!=null?e.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{let e=ee(this._current.projectedGeometry),t=new x([],e);return P(new x,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{let e=this._current.projectedGeometry,t=te(e.paths,this.hasZ),s=new x([],t);return P(new x,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(e,t){let s=this._current.attributes[e];if(s!==void 0)return s;let i=e.toLowerCase();for(let o in this._current.attributes)if(o.toLowerCase()===i)return this._current.attributes[o]}_readAttributes(){return this._current.attributes}};var F=class r{static fromGraphic(e,t,s,i){return new r(e.geometry,t,e.attributes,e.visible,e.uid,e.version,s,i)}constructor(e,t,s,i,o,a,n,l){this.geometry=e,this.symbol=t,this.attributes=s,this.visible=i,this.objectId=o,this._version=a,this.zOrder=n,this.displayId=l,this.bounds=_(),this.prevBounds=_(),this.size=[0,0,0,0]}get linearCIM(){return this.symbolResource?.symbolInfo.linearCIM}get hasAnimations(){let{linearCIM:e}=this;return!!e&&e.some(t=>"animationParams"in t&&!!t.animationParams)}update(e,t,s){return(this._version!==e.version||this.zOrder!==s||this.symbol!==t)&&(this.prevBounds=this.bounds,this.bounds=_(),this.zOrder=s,this.geometry=e.geometry,this.attributes=e.attributes,this.symbol=t,this.visible=e.visible,this._version=e.version,this.symbolResource=null,this.projectedGeometry=null,!0)}projectAndNormalize(e){return u(this,null,function*(){let t=this.geometry;if(!t||!t.spatialReference||t.type==="mesh")return;t.type==="extent"&&(t=q(t)),yield de(t.spatialReference,e);let s=je(t);if(!s)return;let i=le(s,t.spatialReference,e);i&&K(i),this.projectedGeometry=C(i)?q(i):i})}};var A=class{constructor(e,t,s){this.added=e,this.updated=t,this.removed=s}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}};var We=1e-5;function Ye(r,e){return e.zOrder-r.zOrder}var D=class{constructor(e,t,s,i,o){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=e,this._cimResourceManager=t,this._hittestDrawHelper=new be(t),this._tileInfoView=s,this._store=o;let a=s.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(a.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(e){return this._items.get(e)}update(e,t,s){return u(this,null,function*(){let i=[],o=[],a=[],n=new Set,l=[],c=0;for(let h of e.items){c++;let d=h.uid,p=this._items.get(d),b=t(h);if(n.add(d),p){p.update(h,b,c)&&(o.push(p),l.push(this._updateItem(p,s)));continue}let I=this._store.createDisplayIdForObjectId(d),w=F.fromGraphic(h,b,c,I);l.push(this._updateItem(w,s)),this._items.set(w.objectId,w),i.push(w)}for(let[h,d]of this._items.entries())n.has(h)||(this._store.releaseDisplayIdForObjectId(h),this._items.delete(h),a.push(d));return yield Promise.all(l),this._index=null,new A(i,o,a)})}updateLevel(e){this._resolution!==e&&(this._index=null,this._boundsDirty=!0,this._resolution=e)}hitTest(e,t,s,i,o){let a=y("esri-mobile"),n=a?me:fe,l=n+(a?0:ye);e=ue(e,this._tileInfoView.spatialReference);let c=i*window.devicePixelRatio*l,h=_();h[0]=e-c,h[1]=t-c,h[2]=e+c,h[3]=t+c;let d=i*window.devicePixelRatio*n,p=_();p[0]=e-d,p[1]=t-d,p[2]=e+d,p[3]=t+d;let b=.5*i*(l+j),I=this._searchIndex(e-b,t-b,e+b,t+b);if(!I||I.length===0)return[];let w=[],H=_(),T=_();for(let S of I){if(!S.visible)continue;let{projectedGeometry:E,symbolResource:G}=S;this._getSymbolBounds(H,G,E,T,o),T[3]=T[2]=T[1]=T[0]=0,se(H,h)&&w.push(S)}if(w.length===0)return[];let Ze=this._hittestDrawHelper,O=[];for(let S of w){let{projectedGeometry:E,symbolResource:G}=S;if(!G)continue;let{textInfo:Be,symbolInfo:Xe}=G,Ne=Xe.cimSymbol;Ze.hitTest(p,Ne.symbol,E,Be,o,i)&&O.push(S)}return O.sort(Ye),O.map(S=>S.objectId)}queryItems(e){return this._items.size===0?[]:this._searchForItems(e)}clear(){this._items.clear(),this._index=null}_updateItem(e,t){return u(this,null,function*(){yield e.projectAndNormalize(this._outSpatialReference),yield t(e);let{size:s}=e;s[0]=s[1]=s[2]=s[3]=0,this._getSymbolBounds(e.bounds,e.symbolResource,e.projectedGeometry,e.size,0)})}_searchIndex(e,t,s,i){return this._boundsDirty&&(this._items.forEach(o=>this._getSymbolBounds(o.bounds,o.symbolResource,o.projectedGeometry,o.size,0)),this._boundsDirty=!1),this._index||(this._index=Me(9,o=>({minX:o.bounds[0],minY:o.bounds[1],maxX:o.bounds[2],maxY:o.bounds[3]})),this._index.load(Array.from(this._items.values()))),this._index.search({minX:e,minY:t,maxX:s,maxY:i})}_searchForItems(e){let t=this._tileInfoView.spatialReference,s=e.bounds,i=J(t);if(i&&t.isWrappable){let[o,a]=i.valid,n=Math.abs(s[2]-a)<We,l=Math.abs(s[0]-o)<We;if((!n||!l)&&(n||l)){let c=e.resolution,h;h=_(n?[o,s[1],o+c*j,s[3]]:[a-c*j,s[1],a,s[3]]);let d=this._searchIndex(s[0],s[1],s[2],s[3]),p=this._searchIndex(h[0],h[1],h[2],h[3]);return[...new Set([...d,...p])]}}return this._searchIndex(s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,o){if(!t||!t.symbolInfo.linearCIM||!s)return null;if(e||(e=_()),re(e,s),!i||i[0]===0&&i[1]===0&&i[2]===0&&i[3]===0){let{textInfo:l,symbolInfo:c}=t,h=c.cimSymbol;i||(i=[0,0,0,0]);let d=V.getSymbolInflateSize(i,h.symbol,this._cimResourceManager,o,l);i[0]=R(d[0]),i[1]=R(d[1]),i[2]=R(d[2]),i[3]=R(d[3])}let a=this._resolution,n=V.safeSize(i);return e[0]-=n*a,e[1]-=n*a,e[2]+=n*a,e[3]+=n*a,e}};var M=class r{static getOrCreate(e,t,s){let i=t.get(e.id);return i||(i=new r(e,s),t.set(e.id,i)),i}static fromItems(e,t,s){let i=new r(e,s);for(let o of t)i.append(o);return i}constructor(e,t){this.tile=e,this.metadata=t,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=k.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(e){this.addedOrModified.push(e),e.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[e.displayId]=e.objectId)}},m=class extends ae(Y){constructor(r){super(r),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new Pe({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new $e({process:e=>{if(e.type==="update")return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new Re({spatialReference:this.view.spatialReference,fields:new ce}),this._attributeStore=new Ce({isLocal:!0,update:e=>{y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:e}),this.container.attributeView.requestUpdate(e),this.container.requestRender(),y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:e})}});let r=He(null,[]);this._attributeStore.update(r,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=Ge.createGraphics(this.view.spatialReference),this._resourceProxy=new ge({fetch:e=>Promise.all(e.map(t=>this.view.stage.textureManager.rasterizeItem(t))),fetchDictionary:e=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([Q(()=>this._effectiveRenderer,()=>this._pushUpdate()),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.addHandles([this.graphics.on("change",()=>this._pushUpdate())]),this._graphicStore?.destroy(),this._graphicStore=new D(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()})]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);let r=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:r,removed:[]})}get _effectiveRenderer(){return typeof this.renderer=="function"?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){let r=!this._attached||this._updateTracking.updating;return y("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${r}
  -> attaching ${!this._attached}
  -> updateTracking ${this._updateTracking.updating}`),r}hitTest(r){if(!this.view||this.view.suspended)return[];let{resolution:e,rotation:t}=this.view.state,s=this._graphicStore.hitTest(r.x,r.y,2,e,t),i=new Set(s),o=this.graphics.items.reduce((a,n)=>(i.has(n.uid)&&a.set(n.uid,n),a),new Map);return s.map(a=>o.get(a)).filter(W)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(r){this.updateRequested&&(this.updateRequested=!1,this.update(r))}viewChange(){this.requestUpdate()}setHighlight(r){let e=[];for(let{objectId:t,highlightFlags:s}of r){let i=this._graphicStore.getItem(t)?.displayId;e.push({objectId:t,highlightFlags:s,displayId:i})}this._attributeStore.setHighlight(e,r),this._pushUpdate()}graphicUpdateHandler(r){this._pushUpdate()}update(r){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(r.state.resolution)}pushUpdate(){this._pushUpdate()}_pushUpdate(){X(this._commandQueue.push({type:"update"}))}_update(){return u(this,null,function*(){try{y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`);let r=yield this._graphicStore.update(this.graphics,t=>this._getSymbolForGraphic(t),t=>this._ensureSymbolResource(t));for(let t of r.updated)this.container.restartAnimation(t.objectId);if(!r.hasAnyUpdate())return void this._attributeStore.sendUpdates();r.removed.length&&(this._cleanupRequired=!0),y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,r);let e=this._createTileMessages(r);yield this._fetchResources(e),this._write(e);for(let t of r.added)this._setFilterState(t);for(let t of r.updated)this._setFilterState(t);y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,r),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,r)}catch{}this._cleanupSharedResources()})}_createTileMessages(r){let e=new Map;for(let t of r.added){let s=this.view.graphicsTileStore.getIntersectingTiles(t.bounds);for(let i of s)M.getOrCreate(i,e,this._metadata).append(t)}for(let t of r.updated){let s=this.view.graphicsTileStore.getIntersectingTiles(t.prevBounds),i=this.view.graphicsTileStore.getIntersectingTiles(t.bounds);for(let o of s)M.getOrCreate(o,e,this._metadata).removed.push(t.displayId);for(let o of i)M.getOrCreate(o,e,this._metadata).append(t)}for(let t of r.removed){let s=this.view.graphicsTileStore.getIntersectingTiles(t.bounds);for(let i of s)M.getOrCreate(i,e,this._metadata).removed.push(t.displayId)}return Array.from(e.values())}_fetchResources(r){return u(this,null,function*(){for(let{tile:e,reader:t}of r){y("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.id}] GraphicsView fetchResources`,r);let s=t.getCursor();for(;s.next();)for(let i of s.getMeshWriters())i.enqueueRequest(this._resourceProxy,s,e.createArcadeEvaluationOptions(this.view.timeZone))}yield this._resourceProxy.fetchEnqueuedResources()})}_write(r){for(let e of r){y("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView write`,e);let t=this._writeMeshes(e),s=this._tiles.get(e.tile.key);s||(s=this._createFeatureTile(e.tile.key)),y("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView onTileData`,e),this.container.onTileData(s,{type:"update",modify:t,remove:e.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:e.objectIdMap}),this.container.requestRender()}}_writeMeshes(r){let e=new _e(r.tile.id),t=r.reader.getCursor();for(;t.next();){e.entityStart(t.getDisplayId(),t.getZOrder());for(let s of t.getMeshWriters())s.write(e,this._resourceProxy,t,r.tile.createArcadeEvaluationOptions(this.view.timeZone),r.tile.level);e.entityEnd()}return L($({},e.serialize().message),{tileId:r.tile.id})}_setFilterState(r){let e=r.displayId,t=this._attributeStore.getHighlightFlags(r.objectId);this._attributeStore.setData(e,0,0,t|(r.visible?pe:0))}_getSymbolForGraphic(r){return r.symbol!=null?r.symbol:this._effectiveRenderer!=null?this._effectiveRenderer.getSymbol(r):this._getNullSymbol(r)}_ensureSymbolResource(r){return u(this,null,function*(){if(!r.symbol)return;let e=yield this._getSymbolInfo(r.symbol);if(!e)return;let t=e.linearCIM.filter(s=>s.type==="text");if(t.length>0){let s=yield this._getTextResources(r,t);r.symbolResource={symbolInfo:e,textInfo:s}}else r.symbolResource={symbolInfo:e}})}_getSymbolInfo(r){let e=r.hash();return this._hashToSymbolInfo.has(e)||this._hashToSymbolInfo.set(e,this._createSymbolInfo(e,r).catch(t=>null)),this._hashToSymbolInfo.get(e)}_createSymbolInfo(r,e){return u(this,null,function*(){let t=yield this._convertToCIMSymbol(e),s=yield this._createLinearCIM(t);return{hash:r,cimSymbol:t,linearCIM:s,meshWriters:yield this._createMeshWriters(t,s)}})}_convertToCIMSymbol(r){return u(this,null,function*(){let e=ve(r);return e.type==="web-style"?(yield e.fetchCIMSymbol()).data:e})}_createLinearCIM(r){return u(this,null,function*(){return yield Promise.all(xe.fetchResources(r.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(r,!1)})}_createMeshWriters(r,e){return u(this,null,function*(){B(this._controller.signal);let t=this.container.instanceStore,s=this.view.stage.meshWriterRegistry,i=yield Le(r,e,t);return Promise.all(i.map(o=>s.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},o)))})}_onTileUpdate(r){if(r.added&&r.added.length>0)for(let e of r.added)this._updateTracking.addPromise(this._addTile(e));if(r.removed&&r.removed.length>0)for(let e of r.removed)this._removeTile(e.key)}_createFeatureTile(r){let e=this.view.featuresTilingScheme.getTileBounds(_(),r),t=this.view.featuresTilingScheme.getTileResolution(r.level),s=new Ue(r,t,e[0],e[3]);return this._tiles.set(r,s),this.container.addChild(s),s}_addTile(r){return u(this,null,function*(){if(!this._attached)return;let e=this._graphicStore.queryItems(r);if(!e.length)return;let t=this._createFeatureTile(r.key),s=M.fromItems(r,e,this._metadata);yield this._fetchResources([s]);let i=this._writeMeshes(s);t.onMessage({type:"append",append:i,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:s.objectIdMap})})}_removeTile(r){if(!this._tiles.has(r))return;let e=this._tiles.get(r);this.container.removeChild(e),e.destroy(),this._tiles.delete(r)}_getNullSymbol(r){let e=r.geometry;return ie(e)?we:oe(e)||C(e)?Se:this.defaultPointSymbolEnabled?Ie:null}_getTextResources(r,e){return u(this,null,function*(){let t=new Array,s=new Array;for(let n=0;n<e.length;n++){let l=e[n],{resource:c,overrides:h}=l.textRasterizationParam;if(h?.length>0){let d=ze.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:h,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:c.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:c.symbol,textString:c.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},r,this.view.spatialReference,null,z(r.projectedGeometry),null,null);d.then(p=>{let b=p.symbolLayers[0],{textString:I}=b.markerGraphics[0];s.push({type:"cim-rasterization-info",resource:{type:"text",textString:I||"",font:c.font}}),l.text=c.textString=I||""}),t.push(d)}else s.push({type:"cim-rasterization-info",resource:c})}t.length>0&&(yield Promise.all(t));let i=s.map(n=>this.view.stage.textureManager.rasterizeItem(n)),o=yield Promise.all(i);Z(o);let a=new Map;for(let n=0;n<e.length;n++){let l=e[n];a.set(l.textRasterizationParam.resource.symbol,{text:l.text,glyphMosaicItems:o[n]})}return a})}_cleanupSharedResources(){if(!this._cleanupRequired)return;let r=performance.now();if(r-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=r;let e=new Set;for(let s of this._graphicStore.items()){let i=s.symbolResource?.symbolInfo.hash;e.add(i)}let t=new Set(this._hashToSymbolInfo.keys());for(let s of t.values())e.has(s)||this._hashToSymbolInfo.delete(s)}};f([g()],m.prototype,"_effectiveRenderer",null),f([g({constructOnly:!0})],m.prototype,"layerId",void 0),f([g({constructOnly:!0})],m.prototype,"requestUpdateCallback",void 0),f([g()],m.prototype,"container",void 0),f([g({constructOnly:!0})],m.prototype,"graphics",void 0),f([g()],m.prototype,"renderer",void 0),f([g()],m.prototype,"_updateTracking",void 0),f([g()],m.prototype,"updating",null),f([g()],m.prototype,"view",void 0),f([g()],m.prototype,"updateRequested",void 0),f([g()],m.prototype,"defaultPointSymbolEnabled",void 0),m=f([N("esri.views.2d.layers.graphics.GraphicsView2D")],m);var hs=m;export{hs as a};
