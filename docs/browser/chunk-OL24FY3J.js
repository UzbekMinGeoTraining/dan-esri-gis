import{a as v,b as F,c as $}from"./chunk-QBRYULPI.js";import{A as w,C as x,I as E,c as T,f as D,j as R,o as C,u as U,v as p,w as S,x as z,y as i,z as f}from"./chunk-OL43UY3L.js";import{i as h,k as I,m as k,n as P}from"./chunk-NZ7WSL6F.js";import{a as d}from"./chunk-RRDM7P6F.js";import{a as L,b as M}from"./chunk-7LUQF6AI.js";import{b as u}from"./chunk-YFBPRKIN.js";import{g}from"./chunk-LAJXTVEO.js";import{c}from"./chunk-VQHENXDQ.js";import{t as m}from"./chunk-3IBUFXWY.js";var q=i.fromSimpleMarkerSymbol(v),A=p.fromSimpleLineSymbol(F),B=f.fromSimpleFillSymbol($),G=new S({symbolLayers:new c([new D({material:{color:L},edges:new T({size:u(1),color:new d(M)})})])}),O=new p({symbolLayers:new c([new R({material:{color:new d([0,0,0])},size:u(1)})])}),W=new f({symbolLayers:new c([new D({outline:{color:new d([0,0,0]),size:u(1)}})])});function so(o){if(o==null)return null;switch(o.type){case"mesh":return G;case"point":case"multipoint":return q;case"polyline":return A;case"polygon":case"extent":return B}return null}var j="#useCIMFallbackSymbology()",a={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function V(o,n=a){if(!o)return{symbol:null};let{retainId:t=a.retainId,ignoreDrivers:r=a.ignoreDrivers,hasLabelingContext:l=a.hasLabelingContext,retainCIM:y=a.retainCIM,cimFallbackEnabled:s=a.cimFallbackEnabled}=n,e=null;if(x(o)||o instanceof w)e=o.clone();else if(o.type==="cim"){let b=o.data?.symbol?.type;switch(b){case"CIMPointSymbol":e=y?o.clone():i.fromCIMSymbol(o);break;case"CIMLineSymbol":s&&(e=O.clone(),n?.logWarning?.(j,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":s&&(e=W.clone(),n?.logWarning?.(j,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!e)return{error:new m("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${b||"unknown"}' is unsupported in 3D`,{symbol:o})}}else if(o instanceof h)e=p.fromSimpleLineSymbol(o);else if(o instanceof k)e=i.fromSimpleMarkerSymbol(o);else if(o instanceof z)e=i.fromPictureMarkerSymbol(o);else if(o instanceof I)e=n.geometryType&&n.geometryType==="mesh"?S.fromSimpleFillSymbol(o):f.fromSimpleFillSymbol(o);else{if(!(o instanceof P))return{error:new m("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${o.type||o.declaredClass}' is unsupported in 3D`,{symbol:o})};e=l?U.fromTextSymbol(o):i.fromTextSymbol(o)}return t&&e&&e.type!=="cim"&&(e.id=o.id),r&&x(e)&&e.symbolLayers.forEach(b=>b.ignoreDrivers=!0),{symbol:e}}function To(o,n,t,r){let l=N(o,{},{context:r,isLabelSymbol:!1});l!=null&&(n[t]=l)}function Ro(o,n,t,r){let l=N(o,{},{context:r,isLabelSymbol:!0});l!=null&&(n[t]=l)}function J(o){return o instanceof C||o instanceof w}function H(o){return o instanceof C&&(o.type==="polygon-3d"||o.type==="line-3d")}function N(o,n,t){if(o==null)return null;let{context:r,isLabelSymbol:l}=t,y=r?.origin,s=r?.messages;if(y==="web-scene"&&!J(o)){let e=V(o,{retainCIM:!0,hasLabelingContext:l});return e.symbol!=null?e.symbol.write(n,r):(s?.push(new m("symbol:unsupported",`Symbols of type '${o.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:o,context:r,error:e.error})),null)}return g(r?.layer)&&H(o)?(s?.push(new m("symbol:unsupported",`Symbols of type '${o.declaredClass}' are not supported on layers of type '${r?.layer?.declaredClass}'.`,{symbol:o,context:r})),null):(y==="web-map"||y==="portal-item"&&!g(r?.layer))&&J(o)?(s?.push(new m("symbol:unsupported",`Symbols of type '${o.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:o,context:r})),null):o.write(n,r)}function Uo(o,n){return E(o,null,n)}export{so as a,a as b,V as c,To as d,Ro as e,Uo as f};
